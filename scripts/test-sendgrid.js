#!/usr/bin/env node

/**
 * Script de test rapide pour SendGrid
 * Usage: node scripts/test-sendgrid.js
 */

async function testSendGrid() {
    console.log('üöÄ Test de configuration SendGrid');
    console.log('='.repeat(50));

    // V√©rifier les variables d'environnement
    const smtpHost = process.env.SMTP_HOST;
    const smtpPort = process.env.SMTP_PORT;
    const smtpUser = process.env.SMTP_USER;
    const smtpPass = process.env.SMTP_PASS;

    console.log('üîß Configuration d√©tect√©e :');
    console.log(`   Host: ${smtpHost || '‚ùå Non configur√©'}`);
    console.log(`   Port: ${smtpPort || '‚ùå Non configur√©'}`);
    console.log(`   User: ${smtpUser ? '‚úÖ Configur√©' : '‚ùå Non configur√©'}`);
    console.log(`   Pass: ${smtpPass ? '‚úÖ Configur√© (masqu√©)' : '‚ùå Non configur√©'}`);

    if (!smtpHost || !smtpPort || !smtpUser || !smtpPass) {
        console.log('\n‚ùå Configuration SendGrid manquante !');
        console.log('\nüìã Configuration requise dans .env :');
        console.log('SMTP_HOST="smtp.sendgrid.net"');
        console.log('SMTP_PORT="587"');
        console.log('SMTP_USER="apikey"');
        console.log('SMTP_PASS="SG.votre-cle-api-sendgrid"');
        console.log('\nüìñ Consultez EMAIL_SETUP.md pour les instructions compl√®tes');
        process.exit(1);
    }

    // V√©rifier si c'est bien SendGrid
    if (smtpHost !== 'smtp.sendgrid.net') {
        console.log('\n‚ö†Ô∏è Configuration d√©tect√©e mais ce n\'est pas SendGrid');
        console.log('Pour tester SendGrid, configurez :');
        console.log('SMTP_HOST="smtp.sendgrid.net"');
        return;
    }

    console.log('\n‚úÖ Configuration SendGrid d√©tect√©e !');

    // Tester la connexion
    try {
        console.log('\nüîå Test de connexion SMTP...');

        const nodemailer = await import('nodemailer');

        const transporter = nodemailer.createTransporter({
            host: smtpHost,
            port: parseInt(smtpPort),
            secure: false, // false pour 587
            auth: {
                user: smtpUser,
                pass: smtpPass,
            },
        });

        // V√©rifier la connexion
        await transporter.verify();
        console.log('‚úÖ Connexion SMTP r√©ussie !');

        // Test d'envoi d'email
        console.log('\nüìß Test d\'envoi d\'email...');

        const testEmail = process.argv[2] || 'test@example.com';
        console.log(`üì® Envoi √†: ${testEmail}`);

        const mailOptions = {
            from: {
                name: 'PixelPulse',
                address: smtpUser === 'apikey' ? 'noreply@pixelpulse.com' : smtpUser
            },
            to: testEmail,
            subject: 'Test SendGrid - PixelPulse',
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                    <h2>üéâ Test SendGrid r√©ussi !</h2>
                    <p>Votre configuration SendGrid fonctionne parfaitement.</p>
                    <p><strong>Email envoy√© le:</strong> ${new Date().toLocaleString('fr-FR')}</p>
                    <hr>
                    <p style="color: #666; font-size: 12px;">
                        Ceci est un email de test automatique.
                    </p>
                </div>
            `,
            text: `
Test SendGrid r√©ussi !

Votre configuration SendGrid fonctionne parfaitement.
Email envoy√© le: ${new Date().toLocaleString('fr-FR')}

Ceci est un email de test automatique.
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('‚úÖ Email envoy√© avec succ√®s !');
        console.log(`üìß ID du message: ${info.messageId}`);

        // Instructions pour v√©rifier
        console.log('\nüìã Prochaines √©tapes :');
        console.log('1. V√©rifiez votre bo√Æte email');
        console.log('2. V√©rifiez le dashboard SendGrid dans "Activity Feed"');
        console.log('3. Testez le syst√®me de mot de passe oubli√© :');
        console.log('   node scripts/test-forgot-password.js votre-email@test.com');

    } catch (error) {
        console.error('‚ùå Erreur lors du test SendGrid:', error.message);

        if (error.message.includes('Invalid login')) {
            console.log('\nüîç Causes possibles :');
            console.log('‚Ä¢ Cl√© API SendGrid incorrecte');
            console.log('‚Ä¢ Cl√© API expir√©e ou r√©voqu√©e');
            console.log('‚Ä¢ Permissions insuffisantes (besoin de Mail Send)');
        } else if (error.message.includes('Sender')) {
            console.log('\nüîç Causes possibles :');
            console.log('‚Ä¢ Exp√©diteur non v√©rifi√© dans SendGrid');
            console.log('‚Ä¢ Domaine non authentifi√©');
        }

        console.log('\nüìñ Consultez EMAIL_SETUP.md pour r√©soudre le probl√®me');
        process.exit(1);
    }
}

testSendGrid();